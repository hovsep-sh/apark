{"version":3,"sources":["components/Header/index.jsx","components/Filter/DropDown/index.jsx","components/Filter/index.jsx","components/List/Story/index.jsx","helpers/basic.js","components/List/WatchListItemCont/index.jsx","components/List/index.jsx","helpers/requests.js","App.js","reportWebVitals.js","index.js"],"names":["Header","HeaderCont","styled","header","FilterDropDown","children","text1","text2","useState","open","setOpen","dropDownRef","useRef","handleClickOutside","event","current","contains","target","useEffect","document","addEventListener","removeEventListener","DropDown","DropDownShown","onClick","Choosen","Text","DropDownIcon","DropDownList","ref","div","span","p","Filter","setLanguage","setOrder","language","order","handleRequestByFilters","isOpen","setIsOpen","id","val","checked","checkedLanguageItems","setCheckedLanguageItems","checkedOrderItems","setCheckedOrderItems","handleAutoRefreshTimeChange","time","console","log","handleOrderChange","arr","forEach","item","handleLanguageChange","e","isChecked","languageStr","FilterCont","WatchListName","RefreshButton","type","FilterButton","FilterSettings","FilterHeading","onChange","section","h1","button","h3","Story","date","story","StoryCont","imageUrls","BigImage","src","alt","StoryTitle","title","domain_cached_logo_url","domain_name","publishTime","moment","diff","h4","img","WatchListCont","ul","WatchListItem","li","WatchListItemCont","stories","lisContRef","listRef","useMemo","map","List","handleLoadNext","loading","setLoading","WatchList","onScroll","scrollTop","scrollHeight","defaultProps","getByFilter","limit","token","limitUrl","languageUrl","orderUrl","tokenUrl","fetch","then","res","json","data","catch","er","App","storiesData","setStoriesData","nextToken","setNextToken","a","next_page_token","concat","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.129821c8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from 'styled-components'\r\n\r\nexport default function Header() {\r\n    return (<HeaderCont>\r\n        <span>logo</span>\r\n        <span>avatar</span>\r\n    </HeaderCont>)\r\n}\r\nconst HeaderCont = styled.header`\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`","import React, {useEffect, useRef, useState} from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default function FilterDropDown({children, text1, text2}) {\r\n    const [open, setOpen] = useState(false);\r\n    const dropDownRef = useRef(null);\r\n    const handleOpenDropDown = () => {\r\n        setOpen(true)\r\n    }\r\n    const handleClickOutside = (event) => {\r\n        if (dropDownRef.current && !dropDownRef.current.contains(event.target)) {\r\n            setOpen(false);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        document.addEventListener('click', handleClickOutside, true);\r\n        return () => {\r\n            document.removeEventListener('click', handleClickOutside, true);\r\n        };\r\n    }, []);\r\n    return (\r\n        <DropDown>\r\n            <DropDownShown onClick={handleOpenDropDown}>\r\n                <Choosen>{text1}</Choosen>\r\n                <Text>{text2}</Text>\r\n                <DropDownIcon> ></DropDownIcon>\r\n            </DropDownShown>\r\n            {\r\n                open && (\r\n                    <DropDownList ref={dropDownRef}>\r\n                        {children}\r\n                    </DropDownList>)\r\n            }\r\n        </DropDown>\r\n    );\r\n}\r\nconst DropDown = styled.div`\r\n  position: relative;\r\n  width: 172px;\r\n  height: 42px;\r\n  background-color: white;\r\n  margin-left: 5px;\r\n`;\r\nconst DropDownShown = styled.div`\r\n  position: relative;\r\n`;\r\nconst DropDownIcon = styled.span`\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n`;\r\nconst DropDownList = styled.div`\r\n  position: absolute;\r\n  background-color: #fff;\r\n`;\r\nconst Choosen = styled.p`\r\n  margin-top: 0;\r\n  margin-bottom: 5px;\r\n  font-size: 13px;\r\n`;\r\nconst Text = styled.p`\r\n  margin-top: 0;\r\n  margin-bottom: 5px;\r\n  font-size: 10px;\r\n`;\r\n","import React, {useState} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from 'prop-types';\r\nimport FilterDropDown from \"./DropDown\";\r\n\r\n\r\nexport default function Filter({setLanguage, setOrder, language, order, handleRequestByFilters}) {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [checkedLanguageItems, setCheckedLanguageItems] = useState(\r\n        [\r\n            {id: 1, val: 'en,de,zh,it', checked: true},\r\n            {id: 2, val: 'en', checked: true},\r\n            {id: 3, val: 'de', checked: true},\r\n            {id: 4, val: 'zh', checked: true},\r\n            {id: 5, val: 'it', checked: true},\r\n        ]\r\n    );\r\n    const [checkedOrderItems, setCheckedOrderItems] = useState(\r\n        [\r\n            {id: 2, val: 'top', checked: true},\r\n            {id: 3, val: 'latest', checked: false},\r\n            {id: 4, val: 'read', checked: false},\r\n            {id: 5, val: 'retweeted', checked: false},\r\n        ]\r\n    );\r\n    const openFilters = () => {\r\n        setIsOpen(!isOpen);\r\n    }\r\n    const someaction = () => {\r\n        console.log('filter')\r\n    }\r\n    const handleReset = () => {\r\n        console.log('filter')\r\n    }\r\n    const handleAutoRefreshTimeChange = (time) => {\r\n        console.log('time', time);\r\n    }\r\n    const handleOrderChange = (val) => {\r\n        const arr = [...checkedOrderItems];\r\n        arr.forEach(item => {\r\n            console.log()\r\n            if (!(item.val === val)) {\r\n                item.checked = false;\r\n            } else {\r\n                item.checked = true;\r\n            }\r\n        });\r\n        setCheckedOrderItems(arr);\r\n        setOrder(val);\r\n    }\r\n    const handleLanguageChange = (e, val) => {\r\n        const isChecked = e.target.checked;\r\n        const arr = [...checkedLanguageItems];\r\n        if (!isChecked) {\r\n            arr[0].checked = false;\r\n        }\r\n        arr.forEach(item => {\r\n            if (val === 'en,de,zh,it') {\r\n                item.checked = isChecked;\r\n            } else if (item.val === val) {\r\n                item.checked = isChecked;\r\n            }\r\n        });\r\n        let languageStr = arr[0].checked ? arr[0].val : '';\r\n        if(!languageStr) {\r\n            arr.forEach(item=>{\r\n                if(item.checked){\r\n                    languageStr+=item.val;\r\n                    languageStr+=',';\r\n                }\r\n            })\r\n        }\r\n        console.log('languageStr',languageStr)\r\n        setCheckedLanguageItems(arr);\r\n        setLanguage(languageStr);\r\n    }\r\n    return (\r\n        <FilterCont>\r\n            <div>\r\n                <WatchListName>Watchlist Name</WatchListName>\r\n                <RefreshButton type=\"button\" onClick={someaction}>refresh</RefreshButton>\r\n                <FilterButton type=\"button\" onClick={openFilters}>filter</FilterButton>\r\n            </div>\r\n            {\r\n                isOpen && (\r\n                    <FilterSettings>\r\n                        <FilterDropDown text1={'1 min'} text2={'AUTOREFRESH'}>\r\n                            <ul>\r\n                                <li>\r\n                                    <button type={'button'} onClick={() => handleAutoRefreshTimeChange(10)}>10 sec\r\n                                    </button>\r\n                                </li>\r\n                                <li>\r\n                                    <button type={'button'} onClick={() => handleAutoRefreshTimeChange(30)}>30 sec\r\n                                    </button>\r\n                                </li>\r\n                                <li>\r\n                                    <button type={'button'} onClick={() => handleAutoRefreshTimeChange(60)}>1 min\r\n                                    </button>\r\n                                </li>\r\n                                <li>\r\n                                    <button type={'button'} onClick={() => handleAutoRefreshTimeChange(600)}>10 min\r\n                                    </button>\r\n                                </li>\r\n                            </ul>\r\n                        </FilterDropDown>\r\n                        <FilterDropDown text1={'Top Rated'} text2={'ORDER'}>\r\n                            <FilterHeading>ORDER:</FilterHeading>\r\n                            <ul>\r\n                                <li>\r\n                                    <label> Top Rated\r\n                                        <input checked={checkedOrderItems[0].checked} type=\"checkbox\"\r\n                                               onChange={() => handleOrderChange('top')}/>\r\n                                    </label>\r\n                                </li>\r\n                                <li>\r\n                                    <label> Latest8\r\n                                        <input checked={checkedOrderItems[1].checked} type=\"checkbox\"\r\n                                               onChange={() => handleOrderChange('latest')}/>\r\n                                    </label>\r\n                                </li>\r\n                                <li>\r\n                                    <label> Most read\r\n                                        <input checked={checkedOrderItems[2].checked} type=\"checkbox\"\r\n                                               onChange={() => handleOrderChange('read')}/>\r\n                                    </label>\r\n                                </li>\r\n                                <li>\r\n                                    <label> Popular\r\n                                        <input checked={checkedOrderItems[3].checked} type=\"checkbox\"\r\n                                               onChange={() => handleOrderChange('retweeted')}/>\r\n                                    </label>\r\n                                </li>\r\n                            </ul>\r\n                        </FilterDropDown>\r\n                        <FilterDropDown text1={'all languages'} text2={'LANGUAGES'}>\r\n                            <FilterHeading>LANGUAGES:</FilterHeading>\r\n                            <ul>\r\n                                <li>\r\n                                    <label> Selected/Unselect All\r\n                                        <input checked={checkedLanguageItems[0].checked} type=\"checkbox\"\r\n                                               onChange={(e) => handleLanguageChange(e, 'en,de,zh,it')}/>\r\n                                    </label>\r\n                                </li>\r\n                                <li>\r\n                                    <label> English\r\n                                        <input checked={checkedLanguageItems[1].checked} type=\"checkbox\"\r\n                                               onChange={(e) => handleLanguageChange(e, 'en')}/>\r\n                                    </label>\r\n                                </li>\r\n                                <li>\r\n                                    <label> German\r\n                                        <input checked={checkedLanguageItems[2].checked} type=\"checkbox\"\r\n                                               onChange={(e) => handleLanguageChange(e, 'de')}/>\r\n                                    </label>\r\n                                </li>\r\n                                <li>\r\n                                    <label> Chinese\r\n                                        <input checked={checkedLanguageItems[3].checked} type=\"checkbox\"\r\n                                               onChange={(e) => handleLanguageChange(e, 'zh')}/>\r\n                                    </label>\r\n                                </li>\r\n                                <li>\r\n                                    <label> Italian\r\n                                        <input checked={checkedLanguageItems[4].checked} type=\"checkbox\"\r\n                                               onChange={(e) => handleLanguageChange(e, 'it')}/>\r\n                                    </label>\r\n                                </li>\r\n                            </ul>\r\n\r\n                        </FilterDropDown>\r\n                        <button type={'button'} onClick={handleReset}>Reset</button>\r\n                    </FilterSettings>\r\n                )\r\n            }\r\n        </FilterCont>\r\n    )\r\n}\r\nFilter.propTypes = {\r\n    setLanguage: PropTypes.func.isRequired,\r\n    setOrder: PropTypes.func.isRequired,\r\n    handleRequestByFilters: PropTypes.func.isRequired,\r\n    language: PropTypes.string.isRequired,\r\n    order: PropTypes.string.isRequired\r\n}\r\n\r\nconst FilterCont = styled.section`\r\n  width: 100%;\r\n`;\r\nconst WatchListName = styled.h1`\r\n  color: blue;\r\n`;\r\nconst FilterSettings = styled.div`\r\n  margin: 14px 0;\r\n  padding: 20px 24px;\r\n  background-color: #eee;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst FilterButton = styled.button`\r\n  width: 100px;\r\n  height: 40px;\r\n  background-color: #eee;\r\n  border: none;\r\n`;\r\nconst RefreshButton = styled.button`\r\n  width: 100px;\r\n  height: 40px;\r\n  background-color: #fff;\r\n  border: none;\r\n`;\r\nconst FilterHeading = styled.h3`\r\n  font-size: 13px;\r\n  font-weight: bold;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  line-height: normal;\r\n  letter-spacing: normal;\r\n  color: #292929;\r\n`;\r\n\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {getDateDifference} from \"../../../helpers/basic\";\r\nexport default function Story({story}) {\r\n    return(\r\n        <StoryCont>\r\n            <div>\r\n                {\r\n                    story.imageUrls && ( <BigImage src={story.imageUrls[0]} alt='avatar'/>)\r\n                }\r\n\r\n            </div>\r\n            <div>\r\n                <StoryTitle>{story.title}</StoryTitle>\r\n                <img src={story.domain_cached_logo_url} alt={'logo'}/>\r\n                <span>{story.domain_name}</span>\r\n                <span>{getDateDifference(story.publishTime)}</span>\r\n            </div>\r\n        </StoryCont>\r\n    )\r\n}\r\nconst StoryCont= styled.div`\r\n    display: grid;\r\n    grid-template-columns: 70px calc(100% - 70px);\r\n    grid-gap: 10px;\r\n  margin: 10px 0;\r\n  background-color: white;\r\n`;\r\nconst StoryTitle = styled.h4`\r\n  font-size: 16px;\r\n  font-weight: normal;\r\n  font-stretch: normal;\r\n  font-style: normal;\r\n  line-height: 1.5;\r\n  letter-spacing: normal;\r\n`;\r\nconst BigImage = styled.img`\r\n  width: 70px;\r\n`;","import moment from 'moment';\r\nexport  function getDateDifference(date) {\r\n    let newDate;\r\n    if(moment().diff(date, 'years')){\r\n        newDate = moment().diff(date, 'years')+'y';\r\n    } else if(moment().diff(date, 'month')){\r\n        newDate = moment().diff(date, 'month')+'m';\r\n    } else if(moment().diff(date, 'days')){\r\n        newDate = moment().diff(date, 'days') + 'd';\r\n    } else if(moment().diff(date, 'hours')){\r\n        newDate = moment().diff(date, 'hours') + 'h';\r\n    } else if( moment().diff(date, 'minutes')){\r\n        newDate = moment().diff(date, 'minutes') + 'm';\r\n    } else {\r\n        newDate = moment().diff(date, 'second') + 's';\r\n    }\r\n\r\n    return newDate\r\n}","import React, {useMemo} from \"react\";\r\nimport Story from \"../Story\";\r\nimport styled from \"styled-components\";\r\n const  WatchListItemCont =({stories, listRef, lisContRef})=> useMemo(()=>( <WatchListCont ref={lisContRef}>\r\n    {\r\n        stories.map(story=>\r\n            <WatchListItem key={story.id}>\r\n                <Story story={story}/>\r\n            </WatchListItem>\r\n        )\r\n    }\r\n</WatchListCont>)\r\n,[stories]);\r\nconst WatchListCont = styled.ul`\r\n  padding: 0;\r\n  margin: 0;\r\n`;\r\nconst WatchListItem= styled.li`\r\n  list-style: none;\r\n`;\r\nexport default WatchListItemCont;","import React, {useRef} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styled from \"styled-components\";\r\nimport WatchListItemCont from \"./WatchListItemCont\";\r\n\r\nexport default function List({stories, handleLoadNext, loading, setLoading}) {\r\n    console.log(stories);\r\n    const listRef = useRef(null);\r\n    const lisContRef = useRef(null);\r\n    const handleScroll= ()=>{\r\n        if(!loading && ((listRef.current.scrollTop - lisContRef.current.scrollHeight +500) > 0)){\r\n            setLoading(true);\r\n            handleLoadNext();\r\n        }\r\n    }\r\n    return (\r\n        <WatchList onScroll={handleScroll} ref={listRef}>\r\n            <WatchListItemCont stories={stories} listRef={listRef} lisContRef={lisContRef}/>\r\n        </WatchList>\r\n    )\r\n}\r\nList.propTypes = {\r\n    stories: PropTypes.arrayOf(PropTypes.any),\r\n    handleLoadNext: PropTypes.func.isRequired,\r\n    loading:PropTypes.bool.isRequired,\r\n    setLoading: PropTypes.func.isRequired,\r\n};\r\nList.defaultProps = {\r\n    stories: []\r\n}\r\nconst WatchList = styled.section`\r\n  height: calc(100vh - 173px);\r\n  overflow-y:auto;\r\n  background-color: #f7f7f7;\r\n`;\r\n\r\n","export function getAllData  () {\r\n    return fetch('https://cf-endpoint-proxy.herokuapp.com/webapi/v1/stories?limit=10')\r\n        .then((res)=>res.json())\r\n        .then(data=> data)\r\n        .catch(er=> console.log(er))\r\n}\r\nexport function getByFilter(limit, language, order, token) {\r\n    const limitUrl=limit? `limit=${limit}`: '';\r\n    const languageUrl=language ?`&languages=${language}`: '';\r\n    const orderUrl=order ?`&order=${order}`: '';\r\n    const tokenUrl=token?`&page_token=${token}`:'';\r\n    return fetch(`https://cf-endpoint-proxy.herokuapp.com/webapi/v1/stories?${limitUrl}${languageUrl}${orderUrl}${tokenUrl}`)\r\n        .then((res)=>res.json())\r\n        .then(data=> data)\r\n        .catch(er=> console.log(er))\r\n}","import './App.css';\nimport Header from \"./components/Header\";\nimport Filter from \"./components/Filter\";\nimport List from \"./components/List\";\nimport {useEffect, useState} from \"react\";\nimport {getAllData, getByFilter} from \"./helpers/requests\";\n\nfunction App() {\n    const [storiesData, setStoriesData]=useState([]);\n    const [limit, setLimit]= useState('10');\n    const [language, setLanguage]= useState('en,de,zh,it');\n    const [order, setOrder]= useState('top');\n    const [nextToken, setNextToken]= useState('');\n    const [loading, setLoading]=useState(false);\n\n    const handleRequestByFilters = async ()=>{\n        const {stories, next_page_token} = await getByFilter(limit, language, order);\n        console.log('stories', stories)\n        if(stories) {\n            setStoriesData(storiesData);\n            setNextToken(next_page_token);\n            setLoading(false)\n        }\n    }\n    const handleLoadNext = async ()=>{\n        const {stories, next_page_token} = await getByFilter(limit, language, order, nextToken);\n        if(stories) {\n            setStoriesData(storiesData.concat(stories));\n            setNextToken(next_page_token);\n            setLoading(false)\n        }\n    }\n    useEffect(async ()=>{\n        const {stories, next_page_token} = await getAllData();\n        setStoriesData(stories);\n        setNextToken(next_page_token);\n    },[]);\n\n    useEffect( ()=>{\n        console.log(222)\n        handleRequestByFilters();\n    },[order, language]);\n    return (\n        <div className=\"App\">\n            <Header/>\n            <Filter\n                setLanguage={setLanguage}\n                setOrder={setOrder}\n                language={language}\n                order={order}\n                handleRequestByFilters={handleRequestByFilters}\n            />\n            <List\n                stories={ storiesData}\n                handleLoadNext={handleLoadNext}\n                loading={loading}\n                setLoading={setLoading}\n            />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}